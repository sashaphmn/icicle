// #include "fields/id.h"
// #define FIELD_ID M31
// #define DCCT

// #include "fields/field_config.cuh"
// typedef field_config::scalar_t test_scalar;
// typedef field_config::c_extension_t test_ext;
// typedef field_config::scalar_t test_data;

#include "quotient.cu"

#include "fields/field.cuh"
#include <chrono>
#include <iostream>
#include <vector>
#include "fields/point.cuh"

#define START_TIMER(timer) auto timer##_start = std::chrono::high_resolution_clock::now();
#define END_TIMER(timer, msg)                                                                                          \
  printf("%s: %.0f ms\n", msg, FpMilliseconds(std::chrono::high_resolution_clock::now() - timer##_start).count());

// void random_samples(test_data* res, uint32_t count)
// {
//   for (int i = 0; i < count; i++)
//     res[i] = i < 1000 ? test_data::rand_host() : res[i - 1000];
// }

// void incremental_values(test_scalar* res, uint32_t count)
// {
//   for (int i = 0; i < count; i++) {
//     res[i] = i ? res[i - 1] + test_scalar::one() : test_scalar::zero();
//   }
// }

// __global__ void transpose_batch(test_scalar* in, test_scalar* out, int row_size, int column_size)
// {
//   int tid = blockDim.x * blockIdx.x + threadIdx.x;
//   if (tid >= row_size * column_size) return;
//   out[(tid % row_size) * column_size + (tid / row_size)] = in[tid];
// }

typedef m31::q_extension_t QF;
typedef m31::c_extension_t CF;
typedef m31::scalar_t F;
typedef m31::point_t P;
typedef m31::secure_point_t QP;
typedef m31::coset_t C;

int main(int argc, char** argv)
{
  uint32_t half_coset_initial_index = 4194304;
  uint32_t half_coset_step_size = 16777216;
  uint32_t domain_log_size = 8;

  m31::scalar_t columns[] = { {1062746970}, {1062779738}, {93332098}, {93364866}, {284850447}, {284883215}, {2077028039}, {2077060807}, {2128136358}, {2128169126}, {1900284744}, {1900317512}, {965928078}, {965960846}, {1634365123}, {1634397891}, {1059248251}, {1059281019}, {1148138604}, {1148171372}, {2078782346}, {2078815114}, {1099245893}, {1099278661}, {1747310760}, {1747343528}, {72416711}, {72449479}, {1619004176}, {1619036944}, {1946839808}, {1946872576}, {1230530610}, {1230563378}, {989329054}, {989361822}, {2122406601}, {2122439369}, {1895560097}, {1895592865}, {956189727}, {956222495}, {522674687}, {522707455}, {738013901}, {738046669}, {1987263360}, {1987296128}, {1219773718}, {1219806486}, {573570373}, {573603141}, {1927222976}, {1927255744}, {1527622654}, {1527655422}, {639973013}, {640005781}, {1050034236}, {1050067004}, {92940447}, {92973215}, {110740291}, {110773059}, {248648427}, {248681195}, {2137790649}, {2137823417}, {153975124}, {154007892}, {1846050924}, {1846083692}, {924845847}, {924878615}, {575207283}, {575240051}, {2085063688}, {2085096456}, {1340698521}, {1340731289}, {1824221096}, {1824253864}, {482176850}, {482209618}, {1561878562}, {1561911330}, {21881100}, {21913868}, {1557006499}, {1557039267}, {1028957900}, {1028990668}, {954999593}, {955032361}, {1629028340}, {1629061108}, {376639012}, {376671780}, {1282307717}, {1282340485}, {424633341}, {424666109}, {1258534123}, {1258566891}, {623175279}, {623208047}, {982151189}, {982183957}, {1890336947}, {1890369715}, {1031524946}, {1031557714}, {1485947979}, {1485980747}, {2081510961}, {2081543729}, {1953675576}, {1953708344}, {1395433763}, {1395466531}, {2085058118}, {2085090886}, {204373478}, {204406246}, {1668012958}, {1668045726}, {1691116839}, {1691149607}, {587613431}, {587580663}, {1151144943}, {1151112175}, {127913026}, {127880258}, {1111529921}, {1111497153}, {1002448000}, {1002415232}, {11137973}, {11105205}, {1995503144}, {1995470376}, {267622468}, {267589700}, {1504865391}, {1504832623}, {853664182}, {853631414}, {1535461240}, {1535428472}, {172636603}, {172603835}, {1361835081}, {1361802313}, {502626939}, {502594171}, {1796492183}, {1796459415}, {621096119}, {621063351}, {1048373892}, {1048341124}, {1519587456}, {1519554688}, {1661094027}, {1661061259}, {774371362}, {774338594}, {1444540394}, {1444507626}, {1452806233}, {1452773465}, {1249874958}, {1249842190}, {1058420247}, {1058387479}, {1903057295}, {1903024527}, {259720761}, {259687993}, {1073783660}, {1073750892}, {1078388020}, {1078355252}, {79521857}, {79489089}, {963766845}, {963734077}, {1034799072}, {1034766304}, {1714700794}, {1714668026}, {1233923633}, {1233890865}, {1839747196}, {1839714428}, {2098110105}, {2098077337}, {1909389464}, {1909356696}, {2131996862}, {2131964094}, {1022249416}, {1022216648}, {1273649657}, {1273616889}, {1344690047}, {1344657279}, {264392285}, {264359517}, {1499621640}, {1499588872}, {227675351}, {227642583}, {1714633095}, {1714600327}, {2096465385}, {2096432617}, {221891518}, {221858750}, {1692972055}, {1692939287}, {628377223}, {628344455}, {1438178962}, {1438146194}, {1804197682}, {1804164914}, {753056173}, {753023405}, {870658640}, {870625872}, {551566039}, {551533271}, {1777937940}, {1777905172}, {54581589}, {54548821}, {681320678}, {681287910}, {1064240961}, {1064208193}, {1317642715}, {1317609947}, {783373928}, {783341160}, {647341412}, {647308644}, {1145868462}, {1145835694}, {42467255}, {42434487}, {1585507399}, {1585474631}, {82407060}, {82374292}, {2125493940}, {2125559476}, {186664196}, {186729732}, {569700894}, {569766430}, {2006572431}, {2006637967}, {2108789069}, {2108854605}, {1653085841}, {1653151377}, {1931856156}, {1931921692}, {1121246599}, {1121312135}, {2118496502}, {2118562038}, {148793561}, {148859097}, {2010081045}, {2010146581}, {51008139}, {51073675}, {1347137873}, {1347203409}, {144833422}, {144898958}, {1090524705}, {1090590241}, {1746195969}, {1746261505}, {313577573}, {313643109}, {1978658108}, {1978723644}, {2097329555}, {2097395091}, {1643636547}, {1643702083}, {1912379454}, {1912444990}, {1045349374}, {1045414910}, {1476027802}, {1476093338}, {1827043073}, {1827108609}, {292063789}, {292129325}, {1147140746}, {1147206282}, {1706962305}, {1707027841}, {907761661}, {907827197}, {1279946026}, {1280011562}, {2100068472}, {2100134008}, {185880894}, {185946430}, {221480582}, {221546118}, {497296854}, {497362390}, {2128097651}, {2128163187}, {307950248}, {308015784}, {1544618201}, {1544683737}, {1849691694}, {1849757230}, {1150414566}, {1150480102}, {2022643729}, {2022709265}, {533913395}, {533978931}, {1500958545}, {1501024081}, {964353700}, {964419236}, {976273477}, {976339013}, {43762200}, {43827736}, {966529351}, {966594887}, {2057915800}, {2057981336}, {1909999186}, {1910064722}, {1110573033}, {1110638569}, {753278024}, {753343560}, {417131787}, {417197323}, {849266682}, {849332218}, {369584599}, {369650135}, {1246350558}, {1246416094}, {1964302378}, {1964367914}, {1633190247}, {1633255783}, {2063049892}, {2063115428}, {824412311}, {824477847}, {2015538275}, {2015603811}, {1759867505}, {1759933041}, {643383879}, {643449415}, {2022632589}, {2022698125}, {408746956}, {408812492}, {1188542269}, {1188607805}, {1234750031}, {1234815567}, {1175226862}, {1175161326}, {154806239}, {154740703}, {255826052}, {255760516}, {75576195}, {75510659}, {2004896000}, {2004830464}, {22275946}, {22210410}, {1843522641}, {1843457105}, {535244936}, {535179400}, {862247135}, {862181599}, {1707328364}, {1707262828}, {923438833}, {923373297}, {345273206}, {345207670}, {576186515}, {576120979}, {1005253878}, {1005188342}, {1445500719}, {1445435183}, {1242192238}, {1242126702}, {2096747784}, {2096682248}, {891691265}, {891625729}, {1174704407}, {1174638871}, {1548742724}, {1548677188}, {741597141}, {741531605}, {758128819}, {758063283}, {352266269}, {352200733}, {2116840494}, {2116774958}, {1658630943}, {1658565407}, {519441522}, {519375986}, {83673}, {18137}, {9292393}, {9226857}, {159043714}, {158978178}, {1927533690}, {1927468154}, {2069598144}, {2069532608}, {1281917941}, {1281852405}, {320363619}, {320298083}, {1532010745}, {1531945209}, {2048736563}, {2048671027}, {1671295281}, {1671229745}, {2116510077}, {2116444541}, {2044498832}, {2044433296}, {399815667}, {399750131}, {541896447}, {541830911}, {528784570}, {528719034}, {851759633}, {851694097}, {455350702}, {455285166}, {1281782543}, {1281717007}, {2045447123}, {2045381587}, {443783036}, {443717500}, {1238460463}, {1238394927}, {1256754446}, {1256688910}, {728874277}, {728808741}, {1460911717}, {1460846181}, {1506112346}, {1506046810}, {1741317280}, {1741251744}, {1103132078}, {1103066542}, {1408392233}, {1408326697}, {109163178}, {109097642}, {1362641356}, {1362575820}, {2128481922}, {2128416386}, {487801783}, {487736247}, {1566747856}, {1566682320}, {1294682824}, {1294617288}, {144253277}, {144187741}, {84934510}, {84868974}, {1023531151}, {1023465615}, {164814120}, {164748584} };
  uint32_t number_of_columns = 2;
  QF rand_coef = { 1, 2, 3, 4 };
  QF a = { 1133255250, 1096955590, 1717117068, 1572094903 };
  QF b = { 119026853, 46427533, 1286750489, 996706159 };
  uint32_t col_indexes[] = {0, 1};
  QF col_vals[] = {a,b};
  QP gen = {QF{1, 0, 478637715, 513582971}, QF{992285211, 649143431, 740191619, 1186584352}};
  quotient::ColumnSampleBatch<QP, QF> sample = quotient::ColumnSampleBatch<QP, QF>{&gen, col_indexes, col_vals, 2};
  quotient::ColumnSampleBatch<QP, QF> sample_batches[] = {sample, sample, sample};
  uint32_t sample_size = 3;
  uint32_t flattened_line_coeffs_size = 18;

  QF result[256];

  quotient::QuotientConfig cfg = quotient::default_quotient_config();

  quotient::accumulate_quotients<QP, QF, CF, F, P>(
    half_coset_initial_index,
    half_coset_step_size,
    domain_log_size,
    columns,
    number_of_columns,
    rand_coef,
    sample_batches,
    sample_size,
    flattened_line_coeffs_size,
    cfg,
    result
  );

  for (int i = 0; i < 10; i++) {
    std::cout << result[i] << " ";
  }

  // circle_math::CircleDomain<m31::fp_config, m31::scalar_t> domain = circle_math::CircleDomain<m31::fp_config, m31::scalar_t>(domain_log_size);
  // std::cout << domain.coset;
  // assert(domain.coset.initial_index == half_coset_initial_index);
  // assert(domain.coset.step_size == half_coset_step_size);
  // assert(domain.lg_size() == (size_t)domain_log_size);
}
